{"ast":null,"code":"import _defineProperty from \"/Users/isabelcortes/Documents/dev/web_challenges/ui/node_modules/@babel/runtime/helpers/esm/defineProperty\";\nimport _objectSpread from \"/Users/isabelcortes/Documents/dev/web_challenges/ui/node_modules/@babel/runtime/helpers/esm/objectSpread\";\nimport _classCallCheck from \"/Users/isabelcortes/Documents/dev/web_challenges/ui/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/Users/isabelcortes/Documents/dev/web_challenges/ui/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"/Users/isabelcortes/Documents/dev/web_challenges/ui/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/Users/isabelcortes/Documents/dev/web_challenges/ui/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"/Users/isabelcortes/Documents/dev/web_challenges/ui/node_modules/@babel/runtime/helpers/esm/inherits\";\nvar _jsxFileName = \"/Users/isabelcortes/Documents/dev/web_challenges/ui/src/pages/Challenge.js\";\nimport React, { Component } from 'react';\nimport PropTypes from 'prop-types';\nimport axios from 'axios';\nimport _ from 'lodash'; // const fieldValidations = [\n//   ruleRunner(\"url\", \"URL\", required)\n// ];\n\nvar Challenge =\n/*#__PURE__*/\nfunction (_Component) {\n  _inherits(Challenge, _Component);\n\n  function Challenge() {\n    var _getPrototypeOf2;\n\n    var _this;\n\n    _classCallCheck(this, Challenge);\n\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    _this = _possibleConstructorReturn(this, (_getPrototypeOf2 = _getPrototypeOf(Challenge)).call.apply(_getPrototypeOf2, [this].concat(args)));\n    _this.state = {\n      challenge: {},\n      url: '',\n      inputs: {\n        name: '',\n        email: '',\n        url: '' // showErrors: false,\n        // validationErrors: {}\n\n      }\n    };\n\n    _this.onInputChange = function (e) {\n      var _objectSpread2;\n\n      _this.setState({\n        inputs: _objectSpread({}, _this.state.inputs, (_objectSpread2 = {}, _defineProperty(_objectSpread2, e.target.name, e.target.value), _defineProperty(_objectSpread2, \"created_at\", Date.now()), _objectSpread2))\n      });\n    };\n\n    _this.handleFormSubmit = function (e) {\n      e.preventDefault();\n      axios.post('/challenge-submission', _this.state.inputs).then(function (response) {\n        console.log(response);\n      }).catch(function (error) {\n        console.log(error);\n      });\n    };\n\n    _this.renderChallenge = function (challenge) {\n      return React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 56\n        },\n        __self: this\n      }, React.createElement(\"h2\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 57\n        },\n        __self: this\n      }, \"Challenge here\"), React.createElement(\"p\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 58\n        },\n        __self: this\n      }, challenge.name), React.createElement(\"p\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 59\n        },\n        __self: this\n      }, challenge.c_type), React.createElement(\"h2\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 60\n        },\n        __self: this\n      }, \"Submit challenge\"));\n    };\n\n    return _this;\n  }\n\n  _createClass(Challenge, [{\n    key: \"componentDidMount\",\n    value: function componentDidMount() {\n      var _this2 = this;\n\n      axios.get('/challenge', {\n        params: {\n          id: this.props.match.params.id\n        }\n      }).then(function (response) {\n        _this2.setState({\n          challenge: response.data\n        });\n      }).catch(function (error) {\n        console.log(error);\n      });\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      return React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 66\n        },\n        __self: this\n      }, _.isEmpty(this.state.challenge) ? 'loading' : this.renderChallenge(this.state.challenge), React.createElement(\"form\", {\n        onSubmit: this.handleFormSubmit,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 71\n        },\n        __self: this\n      }, React.createElement(\"input\", {\n        type: \"text\",\n        placeholder: \"name\",\n        name: \"name\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 72\n        },\n        __self: this\n      }), React.createElement(\"input\", {\n        type: \"text\",\n        placeholder: \"email\",\n        name: \"email\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 73\n        },\n        __self: this\n      }), React.createElement(\"input\", {\n        type: \"text\",\n        placeholder: \"github url\",\n        name: \"github-url\",\n        onChange: this.onInputChange,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 74\n        },\n        __self: this\n      }), React.createElement(\"button\", {\n        type: \"submit\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 75\n        },\n        __self: this\n      }, \"Submit\")));\n    }\n  }]);\n\n  return Challenge;\n}(Component);\n\nChallenge.propTypes = {\n  match: PropTypes.shape({\n    params: PropTypes.shape({\n      id: PropTypes.string.isRequired\n    }).isRequired\n  }).isRequired\n};\nexport default Challenge;","map":{"version":3,"sources":["/Users/isabelcortes/Documents/dev/web_challenges/ui/src/pages/Challenge.js"],"names":["React","Component","PropTypes","axios","_","Challenge","state","challenge","url","inputs","name","email","onInputChange","e","setState","target","value","Date","now","handleFormSubmit","preventDefault","post","then","response","console","log","catch","error","renderChallenge","c_type","get","params","id","props","match","data","isEmpty","propTypes","shape","string","isRequired"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\nimport PropTypes from 'prop-types';\nimport axios from 'axios';\nimport _ from 'lodash';\n\n// const fieldValidations = [\n//   ruleRunner(\"url\", \"URL\", required)\n// ];\n\nclass Challenge extends Component {\n  state = {\n    challenge: {},\n    url: '',\n    inputs: {\n      name: '',\n      email: '',\n      url: ''\n    }\n    // showErrors: false,\n    // validationErrors: {}\n  }\n\n  componentDidMount() {\n    axios.get('/challenge', { params: { id: this.props.match.params.id } })\n      .then(response => {\n        this.setState({ challenge: response.data });\n      })\n      .catch(error => {\n        console.log(error);\n      });\n  }\n\n  onInputChange = e => {\n    this.setState({\n      inputs: {\n        ...this.state.inputs,\n        [e.target.name]: e.target.value,\n        created_at: Date.now()\n      }\n    });\n  }\n\n  handleFormSubmit = e => {\n    e.preventDefault();\n\n    axios.post('/challenge-submission', this.state.inputs)\n    .then(function (response) {\n      console.log(response);\n    })\n    .catch(function (error) {\n      console.log(error);\n    });\n  }\n\n  renderChallenge = challenge => (\n    <div>\n      <h2>Challenge here</h2>\n      <p>{challenge.name}</p>\n      <p>{challenge.c_type}</p>\n      <h2>Submit challenge</h2>\n    </div>\n  )\n\n  render() {\n    return (\n      <div>\n        { _.isEmpty(this.state.challenge)\n            ? 'loading'\n            : this.renderChallenge(this.state.challenge)\n        }\n        <form onSubmit={this.handleFormSubmit}>\n          <input type=\"text\" placeholder=\"name\" name=\"name\" />\n          <input type=\"text\" placeholder=\"email\" name=\"email\" />\n          <input type=\"text\" placeholder=\"github url\" name=\"github-url\" onChange={this.onInputChange} />\n          <button type=\"submit\">Submit</button>\n        </form>\n      </div>\n    );\n  }\n}\n\nChallenge.propTypes = {\n  match: PropTypes.shape({\n    params: PropTypes.shape({\n      id: PropTypes.string.isRequired\n    }).isRequired\n  }).isRequired\n};\n\nexport default Challenge;\n"]},"metadata":{},"sourceType":"module"}