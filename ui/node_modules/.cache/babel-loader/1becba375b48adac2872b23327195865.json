{"ast":null,"code":"import _classCallCheck from \"/Users/isabelcortes/Documents/dev/web_challenges/ui/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/Users/isabelcortes/Documents/dev/web_challenges/ui/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"/Users/isabelcortes/Documents/dev/web_challenges/ui/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/Users/isabelcortes/Documents/dev/web_challenges/ui/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"/Users/isabelcortes/Documents/dev/web_challenges/ui/node_modules/@babel/runtime/helpers/esm/inherits\";\nvar _jsxFileName = \"/Users/isabelcortes/Documents/dev/web_challenges/ui/src/pages/Challenge.js\";\nimport React, { Component } from 'react';\nimport PropTypes from 'prop-types';\nimport axios from 'axios';\nimport _ from 'lodash'; // const fieldValidations = [\n//   ruleRunner(\"url\", \"URL\", required)\n// ];\n\nvar Challenge =\n/*#__PURE__*/\nfunction (_Component) {\n  _inherits(Challenge, _Component);\n\n  function Challenge() {\n    var _getPrototypeOf2;\n\n    var _this;\n\n    _classCallCheck(this, Challenge);\n\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    _this = _possibleConstructorReturn(this, (_getPrototypeOf2 = _getPrototypeOf(Challenge)).call.apply(_getPrototypeOf2, [this].concat(args)));\n    _this.state = {\n      challenge: {},\n      url: '' // showErrors: false,\n      // validationErrors: {}\n\n    };\n\n    _this.onInputChange = function (e) {\n      console.log(e.target.value);\n    };\n\n    _this.renderChallenge = function (challenge) {\n      return React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 35\n        },\n        __self: this\n      }, React.createElement(\"h2\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 36\n        },\n        __self: this\n      }, \"Challenge here\"), React.createElement(\"p\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 37\n        },\n        __self: this\n      }, challenge.name), React.createElement(\"p\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 38\n        },\n        __self: this\n      }, challenge.c_type), React.createElement(\"h2\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 39\n        },\n        __self: this\n      }, \"Submit challenge\"));\n    };\n\n    return _this;\n  }\n\n  _createClass(Challenge, [{\n    key: \"componentDidMount\",\n    value: function componentDidMount() {\n      var _this2 = this;\n\n      axios.get('/challenge', {\n        params: {\n          id: this.props.match.params.id\n        }\n      }).then(function (response) {\n        _this2.setState({\n          challenge: response.data\n        });\n      }).catch(function (error) {\n        console.log(error);\n      });\n      this.state.validationErrors = run(this.state, fieldValidations);\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      return React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 45\n        },\n        __self: this\n      }, _.isEmpty(this.state.challenge) ? 'loading' : this.renderChallenge(this.state.challenge), React.createElement(\"form\", {\n        action: \"/challenge-submission\",\n        method: \"POST\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 50\n        },\n        __self: this\n      }, React.createElement(\"input\", {\n        type: \"text\",\n        placeholder: \"name\",\n        name: \"name\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 51\n        },\n        __self: this\n      }), React.createElement(\"input\", {\n        type: \"text\",\n        placeholder: \"email\",\n        name: \"email\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 52\n        },\n        __self: this\n      }), React.createElement(\"input\", {\n        type: \"text\",\n        placeholder: \"github url\",\n        name: \"github-url\",\n        onChange: this.onInputChange,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 53\n        },\n        __self: this\n      }), React.createElement(\"button\", {\n        type: \"submit\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 54\n        },\n        __self: this\n      }, \"Submit\")));\n    }\n  }]);\n\n  return Challenge;\n}(Component);\n\nChallenge.propTypes = {\n  match: PropTypes.shape({\n    params: PropTypes.shape({\n      id: PropTypes.string.isRequired\n    }).isRequired\n  }).isRequired\n};\nexport default Challenge;","map":{"version":3,"sources":["/Users/isabelcortes/Documents/dev/web_challenges/ui/src/pages/Challenge.js"],"names":["React","Component","PropTypes","axios","_","Challenge","state","challenge","url","onInputChange","e","console","log","target","value","renderChallenge","name","c_type","get","params","id","props","match","then","response","setState","data","catch","error","validationErrors","run","fieldValidations","isEmpty","propTypes","shape","string","isRequired"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\nimport PropTypes from 'prop-types';\nimport axios from 'axios';\nimport _ from 'lodash';\n\n// const fieldValidations = [\n//   ruleRunner(\"url\", \"URL\", required)\n// ];\n\nclass Challenge extends Component {\n  state = {\n    challenge: {},\n    url: '',\n    // showErrors: false,\n    // validationErrors: {}\n  }\n\n  componentDidMount() {\n    axios.get('/challenge', { params: { id: this.props.match.params.id } })\n      .then(response => {\n        this.setState({ challenge: response.data });\n      })\n      .catch(error => {\n        console.log(error);\n      });\n\n    this.state.validationErrors = run(this.state, fieldValidations);\n  }\n\n  onInputChange = e => {\n    console.log(e.target.value)\n  }\n\n  renderChallenge = challenge => (\n    <div>\n      <h2>Challenge here</h2>\n      <p>{challenge.name}</p>\n      <p>{challenge.c_type}</p>\n      <h2>Submit challenge</h2>\n    </div>\n  )\n\n  render() {\n    return (\n      <div>\n        { _.isEmpty(this.state.challenge)\n            ? 'loading'\n            : this.renderChallenge(this.state.challenge)\n        }\n        <form action=\"/challenge-submission\" method=\"POST\">\n          <input type=\"text\" placeholder=\"name\" name=\"name\" />\n          <input type=\"text\" placeholder=\"email\" name=\"email\" />\n          <input type=\"text\" placeholder=\"github url\" name=\"github-url\" onChange={this.onInputChange} />\n          <button type=\"submit\">Submit</button>\n        </form>\n      </div>\n    );\n  }\n}\n\nChallenge.propTypes = {\n  match: PropTypes.shape({\n    params: PropTypes.shape({\n      id: PropTypes.string.isRequired\n    }).isRequired\n  }).isRequired\n};\n\nexport default Challenge;\n"]},"metadata":{},"sourceType":"module"}